/* @flow */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

import {Effects} from "reflex"
import type {Address, DOM} from "reflex"
import type {URI, ID, Version} from "./common/prelude"
import * as Shell from "./browser/shell";
import * as Input from "./browser/input";
import * as Assistant from "./browser/assistant";
import * as Sidebar from './browser/sidebar';
import * as WebViews from "./browser/web-views";
import * as Overlay from './browser/overlay';
import * as Devtools from "./common/devtools";
import * as Stopwatch from "./common/stopwatch"

export type Mode =
  | 'create-web-view'
  | 'show-web-view'
  | 'edit-web-view'
  | 'show-tabs'
  | 'select-web-view'
  | 'show-web-view'

export type Display =
  { rightOffset: number
  }

export type Model =
  { version: Version
  , mode: Mode
  , display: Display
  , isExpanded: boolean

  , shell: Shell.Model
  , input: Input.Model
  , assistant: Assistant.Model
  , webViews: WebViews.Model
  , sidebar: Sidebar.Model
  , overlay: Overlay.Model
  , devtools: Devtools.Model
  , resizeAnimation: Stopwatch.Model
  }


export type Action =
  | { type: "NoOp" }
  | { type: "Focus" }
  | { type: "Blur" }
  | { type: "CreateWebView" }
  | { type: "EditWebView" }
  | { type: "ShowWebView" }
  | { type: "ShowTabs" }
  | { type: "SelectWebView" }
  | { type: "OpenWebView" }
  | { type: "AttachSidebar" }
  | { type: "DetachSidebar" }
  | { type: "OverlayClicked" }
  | { type: "SubmitInput" }
  | { type: "BlurInput" }
  | { type: "ExitInput" }
  | { type: "Escape" }
  | { type: "Unload" }
  | { type: "ReloadRuntime" }
  | { type: "PrintSnapshot" }
  | { type: "CaptureSnapshot" }
  | { type: "PublishSnapshot" }
  | { type: "StartRecording" }
  | { type: "StopRecording" }
  | { type: "WebViews", source: WebViews.Action }
  | { type: "Input", source: Input.Action }
  | { type: "Sidebar", action: Sidebar.Action }
  | { type: "Overlay", action: Overlay.Action }
  | { type: "Shell", source: Shell.Action }
  | { type: "Devtools", action: Devtools.Action }
  | { type: "Assistant", source: Assistant.Action }
  | { type: "SuggestNext" }
  | { type: "SuggestPrevious" }
  | { type: "Query" }
  | { type: "Suggest", source: Assistant.Suggestion }
  | { type: "Expand" }
  | { type: "Expanded" }
  | { type: "Shrink" }
  | { type: "Shrinked" }
  | { type: "ReceiveOpenURLNotification" }
  | { type: "LiveReload" }
  | { type: "Reloaded" }
  | { type: "ResizeAnimation", action: Stopwatch.Action }
  | { type: "OpenURL", uri: URI }
  | { type: "SelectTab", source: WebViews.Action }
  | { type: "ActivateTab", activateTab: WebViews.Action }
  | { type: "ActivateTabByID", activateTabByID: WebViews.Action }


declare export var LiveReload:Action
declare export var ShowWebView:Action
declare export var OpenWebView:Action
declare export var FocusInput:Action
declare export var ShowTabs:Action
declare export var SelectWebView:Action
declare export var FocusWebView:Action

declare export function init
  ():
  [Model, Effects<Action>]

declare export function update
  (model:Model, action:Action):
  [Model, Effects<Action>]

declare export function view
  (model:Model, address:Address<Action>):
  DOM
