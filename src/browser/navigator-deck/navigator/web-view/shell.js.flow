/* @flow */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

import {Task, Effects} from "reflex"
import type {Never} from "reflex"
import type {ID, Float} from "../../../../common/prelude"
import type {Result} from "../../../../common/result"
import * as Focusable from "../../../../common/focusable"

export type {ID, Float}

// Model extends Focusable.Model with isVisible and zoom fields
export type Model =
  { id: ID
  , zoom: Float
  , isVisible: boolean
  , isFocused: boolean
  }


export type Action =
  | { type: "NoOp" }
  | { type: "ZoomIn" }
  | { type: "ZoomOut" }
  | { type: "ResetZoom" }
  | { type: "MakeVisible" }
  | { type: "MakeNotVisible" }
  | { type: "ZoomChanged"
    , zoomResult: any //Result<Error, Float>
    }
  | { type: "VisibilityChanged"
    , visibilityResult: any //Result<Error, boolean>
    }
  | { type: "Focus" }
  | { type: "Blur" }

declare export var ZoomIn:Action
declare export var ZoomOut:Action
declare export var ResetZoom:Action
declare export var MakeVisible:Action
declare export var MakeNotVisible:Action
declare export var Focus:Action
declare export var Blur:Action

declare export function zoomIn
  (id:ID, zoom:number):
  Task<Never, Result<Error, Float>>

declare export function zoomOut
 (id:ID, zoom:number):
  Task<Never, Result<Error, Float>>

declare export function resetZoom
  (id:ID):
  Task<Never, Result<Error, Float>>

declare export function setVisibility
  (id:ID, isVisible:boolean):
  Task<Never, Result<Error, boolean>>


declare export function init
  (id:ID, isFocused:boolean):
  [Model, Effects<Action>]

declare export function update
  (model:Model, action:Action):
  [Model, Effects<Action>]
