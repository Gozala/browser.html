/* @flow */

import {Effects} from "reflex"
import type {Address, DOM} from "reflex"
import * as History from "./assistant/history"
import * as Search from "./assistant/search"

export type Suggestion =
  { match: string
  , hint: string
  }

export type Model =
  { isOpen: boolean
  , isExpanded: boolean
  , query: string
  , selected: number
  , search: Search.Model
  , history: History.Model
  }


export type Action =
  | { type: "Open" }
  | { type: "Close" }
  | { type: "Expand" }
  | { type: "Reset" }
  | { type: "Unselect" }
  | { type: "SuggestNext" }
  | { type: "SuggestPrevious" }
  | { type: "Query"
    , source: string
    }
  | { type: "Suggest"
    , source: Suggestion
    }
  | { type: "Search"
    , source: Search.Action
    }
  | { type: "History"
    , source: History.Action
    }

declare export var Open:Action
declare export var Close:Action
declare export var Expand:Action
declare export var Unselect:Action
declare export var Reset:Action
declare export var SuggestNext:Action
declare export var SuggestPrevious:Action

declare export function Suggest
  (suggestion:Suggestion):
  Action


declare export function Query
  (input:string):
  Action

declare export function Activate
  ():
  Action


declare export function init
  ():
  [Model, Effects<Action>]

declare export function update
  (model:Model, action:Action):
  [Model, Effects<Action>]

declare export function render
  (model:Model, address:Address<Action>):
  DOM

declare export function view
  (model:Model, address:Address<Action>):
  DOM
